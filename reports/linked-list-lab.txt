Lab report for Linked List Lab - aahmed22
Timestamp: 2014-02-17 16:00:53

|  :scenario |                                    :title | :result | :score |
|------------+-------------------------------------------+---------+--------|
|    working |     Test student code vs instructor tests |         |        |
| qualifying |     Test student tests vs instructor code |         |        |
|    broke-1 |            Insert doesn't increment size. |         |        |
|    broke-2 |                    Insert doesn't insert. |         |        |
|    broke-3 |                    Insert truncates list. |         |        |
|    broke-4 |                    Sorted insert deletes. |         |        |
|    broke-5 |             Sorted insert truncates list. |         |        |
|    broke-6 |                    Delete truncates list. |         |        |
|    broke-7 |            Delete doesn't decrement size. |         |        |
|    broke-8 |            Delete always decrements size. |         |        |
|    broke-9 |              Delete-all only deletes one. |         |        |
|   broke-10 | Delete all decrements count in all cases. |         |        |
|      total |                               Total Score |         |      0 |

Details:


** Details for Test student code vs instructor tests


FAIL "about `delete` - Deletes specified element from the list." at (t_core.clj:59)
    Expected: {:data {:car 2, :cdr {:car 3, :cdr }}, :size 2}::linked_list_lab.core.List
      Actual: nil

FAIL "about `delete` - Deletes specified element from the list." at (t_core.clj:60)
    Expected: {:data {:car 1, :cdr {:car 2, :cdr {:car 3, :cdr }}}, :size 3}::linked_list_lab.core.List
      Actual: nil
Exception in thread "main" java.lang.RuntimeException: Expecting var, but List is mapped to class linked_list_lab.core.List, compiling:(linked_list_lab/t_core.clj:62)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6462)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.access$100(Compiler.java:37)
	at clojure.lang.Compiler$LetExpr$Parser.parse(Compiler.java:5883)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6455)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$BodyExpr$Parser.parse(Compiler.java:5618)
	at clojure.lang.Compiler$FnMethod.parse(Compiler.java:5054)
	at clojure.lang.Compiler$FnExpr.parse(Compiler.java:3674)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6453)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3548)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6457)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3548)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6457)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$BodyExpr$Parser.parse(Compiler.java:5618)
	at clojure.lang.Compiler$FnMethod.parse(Compiler.java:5054)
	at clojure.lang.Compiler$FnExpr.parse(Compiler.java:3674)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6453)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.access$100(Compiler.java:37)
	at clojure.lang.Compiler$LetFnExpr$Parser.parse(Compiler.java:5746)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6455)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3548)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6457)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3548)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6457)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$BodyExpr$Parser.parse(Compiler.java:5618)
	at clojure.lang.Compiler$FnMethod.parse(Compiler.java:5054)
	at clojure.lang.Compiler$FnExpr.parse(Compiler.java:3674)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6453)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.eval(Compiler.java:6508)
	at clojure.lang.Compiler.load(Compiler.java:6952)
	at clojure.lang.RT.loadResourceScript(RT.java:359)
	at clojure.lang.RT.loadResourceScript(RT.java:350)
	at clojure.lang.RT.load(RT.java:429)
	at clojure.lang.RT.load(RT.java:400)
	at clojure.core$load$fn__4890.invoke(core.clj:5415)
	at clojure.core$load.doInvoke(core.clj:5414)
	at clojure.lang.RestFn.invoke(RestFn.java:408)
	at clojure.core$load_one.invoke(core.clj:5227)
	at clojure.core$load_lib.doInvoke(core.clj:5264)
	at clojure.lang.RestFn.applyTo(RestFn.java:142)
	at clojure.core$apply.invoke(core.clj:603)
	at clojure.core$load_libs.doInvoke(core.clj:5298)
	at clojure.lang.RestFn.applyTo(RestFn.java:137)
	at clojure.core$apply.invoke(core.clj:603)
	at clojure.core$require.doInvoke(core.clj:5381)
	at clojure.lang.RestFn.invoke(RestFn.java:421)
	at midje.repl$load_facts$fn__5724.invoke(repl.clj:206)
	at midje.repl$load_facts.doInvoke(repl.clj:192)
	at clojure.lang.RestFn.invoke(RestFn.java:397)
	at user$eval5786.invoke(form-init2832781504207018049.clj:1)
	at clojure.lang.Compiler.eval(Compiler.java:6511)
	at clojure.lang.Compiler.eval(Compiler.java:6501)
	at clojure.lang.Compiler.load(Compiler.java:6952)
	at clojure.lang.Compiler.loadFile(Compiler.java:6912)
	at clojure.main$load_script.invoke(main.clj:283)
	at clojure.main$init_opt.invoke(main.clj:288)
	at clojure.main$initialize.invoke(main.clj:316)
	at clojure.main$null_opt.invoke(main.clj:349)
	at clojure.main$main.doInvoke(main.clj:427)
	at clojure.lang.RestFn.invoke(RestFn.java:421)
	at clojure.lang.Var.invoke(Var.java:419)
	at clojure.lang.AFn.applyToHelper(AFn.java:163)
	at clojure.lang.Var.applyTo(Var.java:532)
	at clojure.main.main(main.java:37)
Caused by: java.lang.RuntimeException: Expecting var, but List is mapped to class linked_list_lab.core.List
	at clojure.lang.Util.runtimeException(Util.java:170)
	at clojure.lang.Compiler.lookupVar(Compiler.java:6839)
	at clojure.lang.Compiler.isMacro(Compiler.java:6306)
	at clojure.lang.Compiler.macroexpand1(Compiler.java:6361)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6441)
	... 91 more
Subprocess failed


** Details for Test student tests vs instructor code

Exception in thread "main" java.lang.RuntimeException: Expecting var, but List is mapped to class linked_list_lab.core.List, compiling:(linked_list_lab/t_core.clj:62)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6462)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.access$100(Compiler.java:37)
	at clojure.lang.Compiler$LetExpr$Parser.parse(Compiler.java:5883)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6455)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$BodyExpr$Parser.parse(Compiler.java:5618)
	at clojure.lang.Compiler$FnMethod.parse(Compiler.java:5054)
	at clojure.lang.Compiler$FnExpr.parse(Compiler.java:3674)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6453)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3548)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6457)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3548)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6457)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$BodyExpr$Parser.parse(Compiler.java:5618)
	at clojure.lang.Compiler$FnMethod.parse(Compiler.java:5054)
	at clojure.lang.Compiler$FnExpr.parse(Compiler.java:3674)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6453)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.access$100(Compiler.java:37)
	at clojure.lang.Compiler$LetFnExpr$Parser.parse(Compiler.java:5746)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6455)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3548)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6457)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3548)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6457)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$BodyExpr$Parser.parse(Compiler.java:5618)
	at clojure.lang.Compiler$FnMethod.parse(Compiler.java:5054)
	at clojure.lang.Compiler$FnExpr.parse(Compiler.java:3674)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6453)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.eval(Compiler.java:6508)
	at clojure.lang.Compiler.load(Compiler.java:6952)
	at clojure.lang.RT.loadResourceScript(RT.java:359)
	at clojure.lang.RT.loadResourceScript(RT.java:350)
	at clojure.lang.RT.load(RT.java:429)
	at clojure.lang.RT.load(RT.java:400)
	at clojure.core$load$fn__4890.invoke(core.clj:5415)
	at clojure.core$load.doInvoke(core.clj:5414)
	at clojure.lang.RestFn.invoke(RestFn.java:408)
	at clojure.core$load_one.invoke(core.clj:5227)
	at clojure.core$load_lib.doInvoke(core.clj:5264)
	at clojure.lang.RestFn.applyTo(RestFn.java:142)
	at clojure.core$apply.invoke(core.clj:603)
	at clojure.core$load_libs.doInvoke(core.clj:5298)
	at clojure.lang.RestFn.applyTo(RestFn.java:137)
	at clojure.core$apply.invoke(core.clj:603)
	at clojure.core$require.doInvoke(core.clj:5381)
	at clojure.lang.RestFn.invoke(RestFn.java:421)
	at midje.repl$load_facts$fn__5724.invoke(repl.clj:206)
	at midje.repl$load_facts.doInvoke(repl.clj:192)
	at clojure.lang.RestFn.invoke(RestFn.java:397)
	at user$eval5786.invoke(form-init8693480140506555578.clj:1)
	at clojure.lang.Compiler.eval(Compiler.java:6511)
	at clojure.lang.Compiler.eval(Compiler.java:6501)
	at clojure.lang.Compiler.load(Compiler.java:6952)
	at clojure.lang.Compiler.loadFile(Compiler.java:6912)
	at clojure.main$load_script.invoke(main.clj:283)
	at clojure.main$init_opt.invoke(main.clj:288)
	at clojure.main$initialize.invoke(main.clj:316)
	at clojure.main$null_opt.invoke(main.clj:349)
	at clojure.main$main.doInvoke(main.clj:427)
	at clojure.lang.RestFn.invoke(RestFn.java:421)
	at clojure.lang.Var.invoke(Var.java:419)
	at clojure.lang.AFn.applyToHelper(AFn.java:163)
	at clojure.lang.Var.applyTo(Var.java:532)
	at clojure.main.main(main.java:37)
Caused by: java.lang.RuntimeException: Expecting var, but List is mapped to class linked_list_lab.core.List
	at clojure.lang.Util.runtimeException(Util.java:170)
	at clojure.lang.Compiler.lookupVar(Compiler.java:6839)
	at clojure.lang.Compiler.isMacro(Compiler.java:6306)
	at clojure.lang.Compiler.macroexpand1(Compiler.java:6361)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6441)
	... 91 more
Subprocess failed


** Details for Insert doesn't increment size.


FAIL "about `insert-front` - it increments the size properly." at (t_core.clj:24)
    Expected: 1
      Actual: 0

FAIL "about `insert-front` - it increments the size properly." at (t_core.clj:25)
    Expected: 2
      Actual: 0
Exception in thread "main" java.lang.RuntimeException: Expecting var, but List is mapped to class linked_list_lab.core.List, compiling:(linked_list_lab/t_core.clj:62)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6462)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.access$100(Compiler.java:37)
	at clojure.lang.Compiler$LetExpr$Parser.parse(Compiler.java:5883)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6455)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$BodyExpr$Parser.parse(Compiler.java:5618)
	at clojure.lang.Compiler$FnMethod.parse(Compiler.java:5054)
	at clojure.lang.Compiler$FnExpr.parse(Compiler.java:3674)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6453)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3548)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6457)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3548)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6457)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$BodyExpr$Parser.parse(Compiler.java:5618)
	at clojure.lang.Compiler$FnMethod.parse(Compiler.java:5054)
	at clojure.lang.Compiler$FnExpr.parse(Compiler.java:3674)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6453)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.access$100(Compiler.java:37)
	at clojure.lang.Compiler$LetFnExpr$Parser.parse(Compiler.java:5746)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6455)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3548)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6457)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3548)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6457)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$BodyExpr$Parser.parse(Compiler.java:5618)
	at clojure.lang.Compiler$FnMethod.parse(Compiler.java:5054)
	at clojure.lang.Compiler$FnExpr.parse(Compiler.java:3674)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6453)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.eval(Compiler.java:6508)
	at clojure.lang.Compiler.load(Compiler.java:6952)
	at clojure.lang.RT.loadResourceScript(RT.java:359)
	at clojure.lang.RT.loadResourceScript(RT.java:350)
	at clojure.lang.RT.load(RT.java:429)
	at clojure.lang.RT.load(RT.java:400)
	at clojure.core$load$fn__4890.invoke(core.clj:5415)
	at clojure.core$load.doInvoke(core.clj:5414)
	at clojure.lang.RestFn.invoke(RestFn.java:408)
	at clojure.core$load_one.invoke(core.clj:5227)
	at clojure.core$load_lib.doInvoke(core.clj:5264)
	at clojure.lang.RestFn.applyTo(RestFn.java:142)
	at clojure.core$apply.invoke(core.clj:603)
	at clojure.core$load_libs.doInvoke(core.clj:5298)
	at clojure.lang.RestFn.applyTo(RestFn.java:137)
	at clojure.core$apply.invoke(core.clj:603)
	at clojure.core$require.doInvoke(core.clj:5381)
	at clojure.lang.RestFn.invoke(RestFn.java:421)
	at midje.repl$load_facts$fn__5724.invoke(repl.clj:206)
	at midje.repl$load_facts.doInvoke(repl.clj:192)
	at clojure.lang.RestFn.invoke(RestFn.java:397)
	at user$eval5786.invoke(form-init6696074751335517188.clj:1)
	at clojure.lang.Compiler.eval(Compiler.java:6511)
	at clojure.lang.Compiler.eval(Compiler.java:6501)
	at clojure.lang.Compiler.load(Compiler.java:6952)
	at clojure.lang.Compiler.loadFile(Compiler.java:6912)
	at clojure.main$load_script.invoke(main.clj:283)
	at clojure.main$init_opt.invoke(main.clj:288)
	at clojure.main$initialize.invoke(main.clj:316)
	at clojure.main$null_opt.invoke(main.clj:349)
	at clojure.main$main.doInvoke(main.clj:427)
	at clojure.lang.RestFn.invoke(RestFn.java:421)
	at clojure.lang.Var.invoke(Var.java:419)
	at clojure.lang.AFn.applyToHelper(AFn.java:163)
	at clojure.lang.Var.applyTo(Var.java:532)
	at clojure.main.main(main.java:37)
Caused by: java.lang.RuntimeException: Expecting var, but List is mapped to class linked_list_lab.core.List
	at clojure.lang.Util.runtimeException(Util.java:170)
	at clojure.lang.Compiler.lookupVar(Compiler.java:6839)
	at clojure.lang.Compiler.isMacro(Compiler.java:6306)
	at clojure.lang.Compiler.macroexpand1(Compiler.java:6361)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6441)
	... 91 more
Subprocess failed


** Details for Insert doesn't insert.


FAIL "about `insert-front` - it puts the elements in the correct order." at (t_core.clj:27)
    Expected: 10
      Actual: nil

FAIL "about `insert-front` - it puts the elements in the correct order." at (t_core.clj:29)
    Expected: 20
      Actual: nil

FAIL "about `insert-front` - it puts the elements in the correct order." at (t_core.clj:30)
    Expected: 10
      Actual: nil
Exception in thread "main" java.lang.RuntimeException: Expecting var, but List is mapped to class linked_list_lab.core.List, compiling:(linked_list_lab/t_core.clj:62)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6462)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.access$100(Compiler.java:37)
	at clojure.lang.Compiler$LetExpr$Parser.parse(Compiler.java:5883)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6455)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$BodyExpr$Parser.parse(Compiler.java:5618)
	at clojure.lang.Compiler$FnMethod.parse(Compiler.java:5054)
	at clojure.lang.Compiler$FnExpr.parse(Compiler.java:3674)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6453)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3548)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6457)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3548)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6457)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$BodyExpr$Parser.parse(Compiler.java:5618)
	at clojure.lang.Compiler$FnMethod.parse(Compiler.java:5054)
	at clojure.lang.Compiler$FnExpr.parse(Compiler.java:3674)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6453)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.access$100(Compiler.java:37)
	at clojure.lang.Compiler$LetFnExpr$Parser.parse(Compiler.java:5746)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6455)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3548)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6457)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3548)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6457)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$BodyExpr$Parser.parse(Compiler.java:5618)
	at clojure.lang.Compiler$FnMethod.parse(Compiler.java:5054)
	at clojure.lang.Compiler$FnExpr.parse(Compiler.java:3674)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6453)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.eval(Compiler.java:6508)
	at clojure.lang.Compiler.load(Compiler.java:6952)
	at clojure.lang.RT.loadResourceScript(RT.java:359)
	at clojure.lang.RT.loadResourceScript(RT.java:350)
	at clojure.lang.RT.load(RT.java:429)
	at clojure.lang.RT.load(RT.java:400)
	at clojure.core$load$fn__4890.invoke(core.clj:5415)
	at clojure.core$load.doInvoke(core.clj:5414)
	at clojure.lang.RestFn.invoke(RestFn.java:408)
	at clojure.core$load_one.invoke(core.clj:5227)
	at clojure.core$load_lib.doInvoke(core.clj:5264)
	at clojure.lang.RestFn.applyTo(RestFn.java:142)
	at clojure.core$apply.invoke(core.clj:603)
	at clojure.core$load_libs.doInvoke(core.clj:5298)
	at clojure.lang.RestFn.applyTo(RestFn.java:137)
	at clojure.core$apply.invoke(core.clj:603)
	at clojure.core$require.doInvoke(core.clj:5381)
	at clojure.lang.RestFn.invoke(RestFn.java:421)
	at midje.repl$load_facts$fn__5724.invoke(repl.clj:206)
	at midje.repl$load_facts.doInvoke(repl.clj:192)
	at clojure.lang.RestFn.invoke(RestFn.java:397)
	at user$eval5786.invoke(form-init394942800092093377.clj:1)
	at clojure.lang.Compiler.eval(Compiler.java:6511)
	at clojure.lang.Compiler.eval(Compiler.java:6501)
	at clojure.lang.Compiler.load(Compiler.java:6952)
	at clojure.lang.Compiler.loadFile(Compiler.java:6912)
	at clojure.main$load_script.invoke(main.clj:283)
	at clojure.main$init_opt.invoke(main.clj:288)
	at clojure.main$initialize.invoke(main.clj:316)
	at clojure.main$null_opt.invoke(main.clj:349)
	at clojure.main$main.doInvoke(main.clj:427)
	at clojure.lang.RestFn.invoke(RestFn.java:421)
	at clojure.lang.Var.invoke(Var.java:419)
	at clojure.lang.AFn.applyToHelper(AFn.java:163)
	at clojure.lang.Var.applyTo(Var.java:532)
	at clojure.main.main(main.java:37)
Caused by: java.lang.RuntimeException: Expecting var, but List is mapped to class linked_list_lab.core.List
	at clojure.lang.Util.runtimeException(Util.java:170)
	at clojure.lang.Compiler.lookupVar(Compiler.java:6839)
	at clojure.lang.Compiler.isMacro(Compiler.java:6306)
	at clojure.lang.Compiler.macroexpand1(Compiler.java:6361)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6441)
	... 91 more
Subprocess failed


** Details for Insert truncates list.


FAIL "about `insert-front` - it puts the elements in the correct order." at (t_core.clj:30)
    Expected: 10
      Actual: nil
Exception in thread "main" java.lang.RuntimeException: Expecting var, but List is mapped to class linked_list_lab.core.List, compiling:(linked_list_lab/t_core.clj:62)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6462)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.access$100(Compiler.java:37)
	at clojure.lang.Compiler$LetExpr$Parser.parse(Compiler.java:5883)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6455)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$BodyExpr$Parser.parse(Compiler.java:5618)
	at clojure.lang.Compiler$FnMethod.parse(Compiler.java:5054)
	at clojure.lang.Compiler$FnExpr.parse(Compiler.java:3674)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6453)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3548)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6457)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3548)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6457)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$BodyExpr$Parser.parse(Compiler.java:5618)
	at clojure.lang.Compiler$FnMethod.parse(Compiler.java:5054)
	at clojure.lang.Compiler$FnExpr.parse(Compiler.java:3674)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6453)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.access$100(Compiler.java:37)
	at clojure.lang.Compiler$LetFnExpr$Parser.parse(Compiler.java:5746)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6455)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3548)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6457)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3548)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6457)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$BodyExpr$Parser.parse(Compiler.java:5618)
	at clojure.lang.Compiler$FnMethod.parse(Compiler.java:5054)
	at clojure.lang.Compiler$FnExpr.parse(Compiler.java:3674)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6453)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.eval(Compiler.java:6508)
	at clojure.lang.Compiler.load(Compiler.java:6952)
	at clojure.lang.RT.loadResourceScript(RT.java:359)
	at clojure.lang.RT.loadResourceScript(RT.java:350)
	at clojure.lang.RT.load(RT.java:429)
	at clojure.lang.RT.load(RT.java:400)
	at clojure.core$load$fn__4890.invoke(core.clj:5415)
	at clojure.core$load.doInvoke(core.clj:5414)
	at clojure.lang.RestFn.invoke(RestFn.java:408)
	at clojure.core$load_one.invoke(core.clj:5227)
	at clojure.core$load_lib.doInvoke(core.clj:5264)
	at clojure.lang.RestFn.applyTo(RestFn.java:142)
	at clojure.core$apply.invoke(core.clj:603)
	at clojure.core$load_libs.doInvoke(core.clj:5298)
	at clojure.lang.RestFn.applyTo(RestFn.java:137)
	at clojure.core$apply.invoke(core.clj:603)
	at clojure.core$require.doInvoke(core.clj:5381)
	at clojure.lang.RestFn.invoke(RestFn.java:421)
	at midje.repl$load_facts$fn__5724.invoke(repl.clj:206)
	at midje.repl$load_facts.doInvoke(repl.clj:192)
	at clojure.lang.RestFn.invoke(RestFn.java:397)
	at user$eval5786.invoke(form-init69487640416927374.clj:1)
	at clojure.lang.Compiler.eval(Compiler.java:6511)
	at clojure.lang.Compiler.eval(Compiler.java:6501)
	at clojure.lang.Compiler.load(Compiler.java:6952)
	at clojure.lang.Compiler.loadFile(Compiler.java:6912)
	at clojure.main$load_script.invoke(main.clj:283)
	at clojure.main$init_opt.invoke(main.clj:288)
	at clojure.main$initialize.invoke(main.clj:316)
	at clojure.main$null_opt.invoke(main.clj:349)
	at clojure.main$main.doInvoke(main.clj:427)
	at clojure.lang.RestFn.invoke(RestFn.java:421)
	at clojure.lang.Var.invoke(Var.java:419)
	at clojure.lang.AFn.applyToHelper(AFn.java:163)
	at clojure.lang.Var.applyTo(Var.java:532)
	at clojure.main.main(main.java:37)
Caused by: java.lang.RuntimeException: Expecting var, but List is mapped to class linked_list_lab.core.List
	at clojure.lang.Util.runtimeException(Util.java:170)
	at clojure.lang.Compiler.lookupVar(Compiler.java:6839)
	at clojure.lang.Compiler.isMacro(Compiler.java:6306)
	at clojure.lang.Compiler.macroexpand1(Compiler.java:6361)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6441)
	... 91 more
Subprocess failed


** Details for Sorted insert deletes.


FAIL "about `insert-ordered` - it places elements properly." at (t_core.clj:50)
    Expected: {:car 0, :cdr {:car 1, :cdr {:car 5, :cdr {:car 8, :cdr }}}}::linked_list_lab.core.Cons
      Actual: {:car 0, :cdr {:car 5, :cdr {:car 8, :cdr }}}::linked_list_lab.core.Cons

FAIL "about `insert-ordered` - it places elements properly." at (t_core.clj:51)
    Expected: {:car 1, :cdr {:car 2, :cdr {:car 5, :cdr {:car 8, :cdr }}}}::linked_list_lab.core.Cons
      Actual: {:car 1, :cdr {:car 2, :cdr {:car 8, :cdr }}}::linked_list_lab.core.Cons

FAIL "about `insert-ordered` - it places elements properly." at (t_core.clj:52)
    Expected: {:car 1, :cdr {:car 5, :cdr {:car 7, :cdr {:car 8, :cdr }}}}::linked_list_lab.core.Cons
      Actual: {:car 1, :cdr {:car 5, :cdr {:car 7, :cdr }}}::linked_list_lab.core.Cons

FAIL "about `insert-ordered` - it places elements properly." at (t_core.clj:54)
    Expected: {:car 1, :cdr {:car 5, :cdr {:car 5, :cdr {:car 8, :cdr }}}}::linked_list_lab.core.Cons
      Actual: {:car 1, :cdr {:car 5, :cdr {:car 8, :cdr }}}::linked_list_lab.core.Cons
Exception in thread "main" java.lang.RuntimeException: Expecting var, but List is mapped to class linked_list_lab.core.List, compiling:(linked_list_lab/t_core.clj:62)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6462)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.access$100(Compiler.java:37)
	at clojure.lang.Compiler$LetExpr$Parser.parse(Compiler.java:5883)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6455)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$BodyExpr$Parser.parse(Compiler.java:5618)
	at clojure.lang.Compiler$FnMethod.parse(Compiler.java:5054)
	at clojure.lang.Compiler$FnExpr.parse(Compiler.java:3674)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6453)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3548)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6457)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3548)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6457)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$BodyExpr$Parser.parse(Compiler.java:5618)
	at clojure.lang.Compiler$FnMethod.parse(Compiler.java:5054)
	at clojure.lang.Compiler$FnExpr.parse(Compiler.java:3674)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6453)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.access$100(Compiler.java:37)
	at clojure.lang.Compiler$LetFnExpr$Parser.parse(Compiler.java:5746)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6455)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3548)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6457)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3548)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6457)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$BodyExpr$Parser.parse(Compiler.java:5618)
	at clojure.lang.Compiler$FnMethod.parse(Compiler.java:5054)
	at clojure.lang.Compiler$FnExpr.parse(Compiler.java:3674)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6453)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.eval(Compiler.java:6508)
	at clojure.lang.Compiler.load(Compiler.java:6952)
	at clojure.lang.RT.loadResourceScript(RT.java:359)
	at clojure.lang.RT.loadResourceScript(RT.java:350)
	at clojure.lang.RT.load(RT.java:429)
	at clojure.lang.RT.load(RT.java:400)
	at clojure.core$load$fn__4890.invoke(core.clj:5415)
	at clojure.core$load.doInvoke(core.clj:5414)
	at clojure.lang.RestFn.invoke(RestFn.java:408)
	at clojure.core$load_one.invoke(core.clj:5227)
	at clojure.core$load_lib.doInvoke(core.clj:5264)
	at clojure.lang.RestFn.applyTo(RestFn.java:142)
	at clojure.core$apply.invoke(core.clj:603)
	at clojure.core$load_libs.doInvoke(core.clj:5298)
	at clojure.lang.RestFn.applyTo(RestFn.java:137)
	at clojure.core$apply.invoke(core.clj:603)
	at clojure.core$require.doInvoke(core.clj:5381)
	at clojure.lang.RestFn.invoke(RestFn.java:421)
	at midje.repl$load_facts$fn__5724.invoke(repl.clj:206)
	at midje.repl$load_facts.doInvoke(repl.clj:192)
	at clojure.lang.RestFn.invoke(RestFn.java:397)
	at user$eval5786.invoke(form-init165414398190980545.clj:1)
	at clojure.lang.Compiler.eval(Compiler.java:6511)
	at clojure.lang.Compiler.eval(Compiler.java:6501)
	at clojure.lang.Compiler.load(Compiler.java:6952)
	at clojure.lang.Compiler.loadFile(Compiler.java:6912)
	at clojure.main$load_script.invoke(main.clj:283)
	at clojure.main$init_opt.invoke(main.clj:288)
	at clojure.main$initialize.invoke(main.clj:316)
	at clojure.main$null_opt.invoke(main.clj:349)
	at clojure.main$main.doInvoke(main.clj:427)
	at clojure.lang.RestFn.invoke(RestFn.java:421)
	at clojure.lang.Var.invoke(Var.java:419)
	at clojure.lang.AFn.applyToHelper(AFn.java:163)
	at clojure.lang.Var.applyTo(Var.java:532)
	at clojure.main.main(main.java:37)
Caused by: java.lang.RuntimeException: Expecting var, but List is mapped to class linked_list_lab.core.List
	at clojure.lang.Util.runtimeException(Util.java:170)
	at clojure.lang.Compiler.lookupVar(Compiler.java:6839)
	at clojure.lang.Compiler.isMacro(Compiler.java:6306)
	at clojure.lang.Compiler.macroexpand1(Compiler.java:6361)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6441)
	... 91 more
Subprocess failed


** Details for Sorted insert truncates list.


FAIL "about `insert-ordered` - it places elements properly." at (t_core.clj:51)
    Expected: {:car 1, :cdr {:car 2, :cdr {:car 5, :cdr {:car 8, :cdr }}}}::linked_list_lab.core.Cons
      Actual: {:car 1, :cdr }::linked_list_lab.core.Cons

FAIL "about `insert-ordered` - it places elements properly." at (t_core.clj:52)
    Expected: {:car 1, :cdr {:car 5, :cdr {:car 7, :cdr {:car 8, :cdr }}}}::linked_list_lab.core.Cons
      Actual: {:car 1, :cdr }::linked_list_lab.core.Cons

FAIL "about `insert-ordered` - it places elements properly." at (t_core.clj:53)
    Expected: {:car 1, :cdr {:car 5, :cdr {:car 8, :cdr {:car 9, :cdr }}}}::linked_list_lab.core.Cons
      Actual: {:car 1, :cdr }::linked_list_lab.core.Cons

FAIL "about `insert-ordered` - it places elements properly." at (t_core.clj:54)
    Expected: {:car 1, :cdr {:car 5, :cdr {:car 5, :cdr {:car 8, :cdr }}}}::linked_list_lab.core.Cons
      Actual: {:car 1, :cdr }::linked_list_lab.core.Cons
Exception in thread "main" java.lang.RuntimeException: Expecting var, but List is mapped to class linked_list_lab.core.List, compiling:(linked_list_lab/t_core.clj:62)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6462)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.access$100(Compiler.java:37)
	at clojure.lang.Compiler$LetExpr$Parser.parse(Compiler.java:5883)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6455)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$BodyExpr$Parser.parse(Compiler.java:5618)
	at clojure.lang.Compiler$FnMethod.parse(Compiler.java:5054)
	at clojure.lang.Compiler$FnExpr.parse(Compiler.java:3674)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6453)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3548)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6457)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3548)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6457)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$BodyExpr$Parser.parse(Compiler.java:5618)
	at clojure.lang.Compiler$FnMethod.parse(Compiler.java:5054)
	at clojure.lang.Compiler$FnExpr.parse(Compiler.java:3674)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6453)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.access$100(Compiler.java:37)
	at clojure.lang.Compiler$LetFnExpr$Parser.parse(Compiler.java:5746)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6455)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3548)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6457)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3548)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6457)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$BodyExpr$Parser.parse(Compiler.java:5618)
	at clojure.lang.Compiler$FnMethod.parse(Compiler.java:5054)
	at clojure.lang.Compiler$FnExpr.parse(Compiler.java:3674)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6453)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.eval(Compiler.java:6508)
	at clojure.lang.Compiler.load(Compiler.java:6952)
	at clojure.lang.RT.loadResourceScript(RT.java:359)
	at clojure.lang.RT.loadResourceScript(RT.java:350)
	at clojure.lang.RT.load(RT.java:429)
	at clojure.lang.RT.load(RT.java:400)
	at clojure.core$load$fn__4890.invoke(core.clj:5415)
	at clojure.core$load.doInvoke(core.clj:5414)
	at clojure.lang.RestFn.invoke(RestFn.java:408)
	at clojure.core$load_one.invoke(core.clj:5227)
	at clojure.core$load_lib.doInvoke(core.clj:5264)
	at clojure.lang.RestFn.applyTo(RestFn.java:142)
	at clojure.core$apply.invoke(core.clj:603)
	at clojure.core$load_libs.doInvoke(core.clj:5298)
	at clojure.lang.RestFn.applyTo(RestFn.java:137)
	at clojure.core$apply.invoke(core.clj:603)
	at clojure.core$require.doInvoke(core.clj:5381)
	at clojure.lang.RestFn.invoke(RestFn.java:421)
	at midje.repl$load_facts$fn__5724.invoke(repl.clj:206)
	at midje.repl$load_facts.doInvoke(repl.clj:192)
	at clojure.lang.RestFn.invoke(RestFn.java:397)
	at user$eval5786.invoke(form-init5102554552782198984.clj:1)
	at clojure.lang.Compiler.eval(Compiler.java:6511)
	at clojure.lang.Compiler.eval(Compiler.java:6501)
	at clojure.lang.Compiler.load(Compiler.java:6952)
	at clojure.lang.Compiler.loadFile(Compiler.java:6912)
	at clojure.main$load_script.invoke(main.clj:283)
	at clojure.main$init_opt.invoke(main.clj:288)
	at clojure.main$initialize.invoke(main.clj:316)
	at clojure.main$null_opt.invoke(main.clj:349)
	at clojure.main$main.doInvoke(main.clj:427)
	at clojure.lang.RestFn.invoke(RestFn.java:421)
	at clojure.lang.Var.invoke(Var.java:419)
	at clojure.lang.AFn.applyToHelper(AFn.java:163)
	at clojure.lang.Var.applyTo(Var.java:532)
	at clojure.main.main(main.java:37)
Caused by: java.lang.RuntimeException: Expecting var, but List is mapped to class linked_list_lab.core.List
	at clojure.lang.Util.runtimeException(Util.java:170)
	at clojure.lang.Compiler.lookupVar(Compiler.java:6839)
	at clojure.lang.Compiler.isMacro(Compiler.java:6306)
	at clojure.lang.Compiler.macroexpand1(Compiler.java:6361)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6441)
	... 91 more
Subprocess failed


** Details for Delete truncates list.


FAIL "about `delete` - Deletes specified element from the list." at (t_core.clj:60)
    Expected: {:data {:car 1, :cdr {:car 2, :cdr {:car 3, :cdr }}}, :size 3}::linked_list_lab.core.List
      Actual: {:data {:car 1, :cdr }, :size 1}::linked_list_lab.core.List
Exception in thread "main" java.lang.RuntimeException: Expecting var, but List is mapped to class linked_list_lab.core.List, compiling:(linked_list_lab/t_core.clj:62)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6462)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.access$100(Compiler.java:37)
	at clojure.lang.Compiler$LetExpr$Parser.parse(Compiler.java:5883)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6455)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$BodyExpr$Parser.parse(Compiler.java:5618)
	at clojure.lang.Compiler$FnMethod.parse(Compiler.java:5054)
	at clojure.lang.Compiler$FnExpr.parse(Compiler.java:3674)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6453)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3548)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6457)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3548)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6457)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$BodyExpr$Parser.parse(Compiler.java:5618)
	at clojure.lang.Compiler$FnMethod.parse(Compiler.java:5054)
	at clojure.lang.Compiler$FnExpr.parse(Compiler.java:3674)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6453)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.access$100(Compiler.java:37)
	at clojure.lang.Compiler$LetFnExpr$Parser.parse(Compiler.java:5746)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6455)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3548)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6457)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3548)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6457)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$BodyExpr$Parser.parse(Compiler.java:5618)
	at clojure.lang.Compiler$FnMethod.parse(Compiler.java:5054)
	at clojure.lang.Compiler$FnExpr.parse(Compiler.java:3674)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6453)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.eval(Compiler.java:6508)
	at clojure.lang.Compiler.load(Compiler.java:6952)
	at clojure.lang.RT.loadResourceScript(RT.java:359)
	at clojure.lang.RT.loadResourceScript(RT.java:350)
	at clojure.lang.RT.load(RT.java:429)
	at clojure.lang.RT.load(RT.java:400)
	at clojure.core$load$fn__4890.invoke(core.clj:5415)
	at clojure.core$load.doInvoke(core.clj:5414)
	at clojure.lang.RestFn.invoke(RestFn.java:408)
	at clojure.core$load_one.invoke(core.clj:5227)
	at clojure.core$load_lib.doInvoke(core.clj:5264)
	at clojure.lang.RestFn.applyTo(RestFn.java:142)
	at clojure.core$apply.invoke(core.clj:603)
	at clojure.core$load_libs.doInvoke(core.clj:5298)
	at clojure.lang.RestFn.applyTo(RestFn.java:137)
	at clojure.core$apply.invoke(core.clj:603)
	at clojure.core$require.doInvoke(core.clj:5381)
	at clojure.lang.RestFn.invoke(RestFn.java:421)
	at midje.repl$load_facts$fn__5724.invoke(repl.clj:206)
	at midje.repl$load_facts.doInvoke(repl.clj:192)
	at clojure.lang.RestFn.invoke(RestFn.java:397)
	at user$eval5786.invoke(form-init5230821931275718346.clj:1)
	at clojure.lang.Compiler.eval(Compiler.java:6511)
	at clojure.lang.Compiler.eval(Compiler.java:6501)
	at clojure.lang.Compiler.load(Compiler.java:6952)
	at clojure.lang.Compiler.loadFile(Compiler.java:6912)
	at clojure.main$load_script.invoke(main.clj:283)
	at clojure.main$init_opt.invoke(main.clj:288)
	at clojure.main$initialize.invoke(main.clj:316)
	at clojure.main$null_opt.invoke(main.clj:349)
	at clojure.main$main.doInvoke(main.clj:427)
	at clojure.lang.RestFn.invoke(RestFn.java:421)
	at clojure.lang.Var.invoke(Var.java:419)
	at clojure.lang.AFn.applyToHelper(AFn.java:163)
	at clojure.lang.Var.applyTo(Var.java:532)
	at clojure.main.main(main.java:37)
Caused by: java.lang.RuntimeException: Expecting var, but List is mapped to class linked_list_lab.core.List
	at clojure.lang.Util.runtimeException(Util.java:170)
	at clojure.lang.Compiler.lookupVar(Compiler.java:6839)
	at clojure.lang.Compiler.isMacro(Compiler.java:6306)
	at clojure.lang.Compiler.macroexpand1(Compiler.java:6361)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6441)
	... 91 more
Subprocess failed


** Details for Delete doesn't decrement size.


FAIL "about `delete` - Deletes specified element from the list." at (t_core.clj:59)
    Expected: {:data {:car 2, :cdr {:car 3, :cdr }}, :size 2}::linked_list_lab.core.List
      Actual: {:data {:car 2, :cdr {:car 3, :cdr }}, :size 3}::linked_list_lab.core.List
Exception in thread "main" java.lang.RuntimeException: Expecting var, but List is mapped to class linked_list_lab.core.List, compiling:(linked_list_lab/t_core.clj:62)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6462)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.access$100(Compiler.java:37)
	at clojure.lang.Compiler$LetExpr$Parser.parse(Compiler.java:5883)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6455)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$BodyExpr$Parser.parse(Compiler.java:5618)
	at clojure.lang.Compiler$FnMethod.parse(Compiler.java:5054)
	at clojure.lang.Compiler$FnExpr.parse(Compiler.java:3674)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6453)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3548)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6457)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3548)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6457)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$BodyExpr$Parser.parse(Compiler.java:5618)
	at clojure.lang.Compiler$FnMethod.parse(Compiler.java:5054)
	at clojure.lang.Compiler$FnExpr.parse(Compiler.java:3674)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6453)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.access$100(Compiler.java:37)
	at clojure.lang.Compiler$LetFnExpr$Parser.parse(Compiler.java:5746)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6455)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3548)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6457)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3548)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6457)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$BodyExpr$Parser.parse(Compiler.java:5618)
	at clojure.lang.Compiler$FnMethod.parse(Compiler.java:5054)
	at clojure.lang.Compiler$FnExpr.parse(Compiler.java:3674)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6453)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.eval(Compiler.java:6508)
	at clojure.lang.Compiler.load(Compiler.java:6952)
	at clojure.lang.RT.loadResourceScript(RT.java:359)
	at clojure.lang.RT.loadResourceScript(RT.java:350)
	at clojure.lang.RT.load(RT.java:429)
	at clojure.lang.RT.load(RT.java:400)
	at clojure.core$load$fn__4890.invoke(core.clj:5415)
	at clojure.core$load.doInvoke(core.clj:5414)
	at clojure.lang.RestFn.invoke(RestFn.java:408)
	at clojure.core$load_one.invoke(core.clj:5227)
	at clojure.core$load_lib.doInvoke(core.clj:5264)
	at clojure.lang.RestFn.applyTo(RestFn.java:142)
	at clojure.core$apply.invoke(core.clj:603)
	at clojure.core$load_libs.doInvoke(core.clj:5298)
	at clojure.lang.RestFn.applyTo(RestFn.java:137)
	at clojure.core$apply.invoke(core.clj:603)
	at clojure.core$require.doInvoke(core.clj:5381)
	at clojure.lang.RestFn.invoke(RestFn.java:421)
	at midje.repl$load_facts$fn__5724.invoke(repl.clj:206)
	at midje.repl$load_facts.doInvoke(repl.clj:192)
	at clojure.lang.RestFn.invoke(RestFn.java:397)
	at user$eval5786.invoke(form-init7900198211592756617.clj:1)
	at clojure.lang.Compiler.eval(Compiler.java:6511)
	at clojure.lang.Compiler.eval(Compiler.java:6501)
	at clojure.lang.Compiler.load(Compiler.java:6952)
	at clojure.lang.Compiler.loadFile(Compiler.java:6912)
	at clojure.main$load_script.invoke(main.clj:283)
	at clojure.main$init_opt.invoke(main.clj:288)
	at clojure.main$initialize.invoke(main.clj:316)
	at clojure.main$null_opt.invoke(main.clj:349)
	at clojure.main$main.doInvoke(main.clj:427)
	at clojure.lang.RestFn.invoke(RestFn.java:421)
	at clojure.lang.Var.invoke(Var.java:419)
	at clojure.lang.AFn.applyToHelper(AFn.java:163)
	at clojure.lang.Var.applyTo(Var.java:532)
	at clojure.main.main(main.java:37)
Caused by: java.lang.RuntimeException: Expecting var, but List is mapped to class linked_list_lab.core.List
	at clojure.lang.Util.runtimeException(Util.java:170)
	at clojure.lang.Compiler.lookupVar(Compiler.java:6839)
	at clojure.lang.Compiler.isMacro(Compiler.java:6306)
	at clojure.lang.Compiler.macroexpand1(Compiler.java:6361)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6441)
	... 91 more
Subprocess failed


** Details for Delete always decrements size.


FAIL "about `delete` - Deletes specified element from the list." at (t_core.clj:60)
    Expected: {:data {:car 1, :cdr {:car 2, :cdr {:car 3, :cdr }}}, :size 3}::linked_list_lab.core.List
      Actual: {:data {:car 1, :cdr {:car 2, :cdr {:car 3, :cdr }}}, :size 2}::linked_list_lab.core.List
Exception in thread "main" java.lang.RuntimeException: Expecting var, but List is mapped to class linked_list_lab.core.List, compiling:(linked_list_lab/t_core.clj:62)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6462)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.access$100(Compiler.java:37)
	at clojure.lang.Compiler$LetExpr$Parser.parse(Compiler.java:5883)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6455)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$BodyExpr$Parser.parse(Compiler.java:5618)
	at clojure.lang.Compiler$FnMethod.parse(Compiler.java:5054)
	at clojure.lang.Compiler$FnExpr.parse(Compiler.java:3674)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6453)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3548)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6457)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3548)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6457)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$BodyExpr$Parser.parse(Compiler.java:5618)
	at clojure.lang.Compiler$FnMethod.parse(Compiler.java:5054)
	at clojure.lang.Compiler$FnExpr.parse(Compiler.java:3674)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6453)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.access$100(Compiler.java:37)
	at clojure.lang.Compiler$LetFnExpr$Parser.parse(Compiler.java:5746)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6455)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3548)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6457)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3548)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6457)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$BodyExpr$Parser.parse(Compiler.java:5618)
	at clojure.lang.Compiler$FnMethod.parse(Compiler.java:5054)
	at clojure.lang.Compiler$FnExpr.parse(Compiler.java:3674)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6453)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.eval(Compiler.java:6508)
	at clojure.lang.Compiler.load(Compiler.java:6952)
	at clojure.lang.RT.loadResourceScript(RT.java:359)
	at clojure.lang.RT.loadResourceScript(RT.java:350)
	at clojure.lang.RT.load(RT.java:429)
	at clojure.lang.RT.load(RT.java:400)
	at clojure.core$load$fn__4890.invoke(core.clj:5415)
	at clojure.core$load.doInvoke(core.clj:5414)
	at clojure.lang.RestFn.invoke(RestFn.java:408)
	at clojure.core$load_one.invoke(core.clj:5227)
	at clojure.core$load_lib.doInvoke(core.clj:5264)
	at clojure.lang.RestFn.applyTo(RestFn.java:142)
	at clojure.core$apply.invoke(core.clj:603)
	at clojure.core$load_libs.doInvoke(core.clj:5298)
	at clojure.lang.RestFn.applyTo(RestFn.java:137)
	at clojure.core$apply.invoke(core.clj:603)
	at clojure.core$require.doInvoke(core.clj:5381)
	at clojure.lang.RestFn.invoke(RestFn.java:421)
	at midje.repl$load_facts$fn__5724.invoke(repl.clj:206)
	at midje.repl$load_facts.doInvoke(repl.clj:192)
	at clojure.lang.RestFn.invoke(RestFn.java:397)
	at user$eval5786.invoke(form-init4081250109417259067.clj:1)
	at clojure.lang.Compiler.eval(Compiler.java:6511)
	at clojure.lang.Compiler.eval(Compiler.java:6501)
	at clojure.lang.Compiler.load(Compiler.java:6952)
	at clojure.lang.Compiler.loadFile(Compiler.java:6912)
	at clojure.main$load_script.invoke(main.clj:283)
	at clojure.main$init_opt.invoke(main.clj:288)
	at clojure.main$initialize.invoke(main.clj:316)
	at clojure.main$null_opt.invoke(main.clj:349)
	at clojure.main$main.doInvoke(main.clj:427)
	at clojure.lang.RestFn.invoke(RestFn.java:421)
	at clojure.lang.Var.invoke(Var.java:419)
	at clojure.lang.AFn.applyToHelper(AFn.java:163)
	at clojure.lang.Var.applyTo(Var.java:532)
	at clojure.main.main(main.java:37)
Caused by: java.lang.RuntimeException: Expecting var, but List is mapped to class linked_list_lab.core.List
	at clojure.lang.Util.runtimeException(Util.java:170)
	at clojure.lang.Compiler.lookupVar(Compiler.java:6839)
	at clojure.lang.Compiler.isMacro(Compiler.java:6306)
	at clojure.lang.Compiler.macroexpand1(Compiler.java:6361)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6441)
	... 91 more
Subprocess failed


** Details for Delete-all only deletes one.

Exception in thread "main" java.lang.RuntimeException: Expecting var, but List is mapped to class linked_list_lab.core.List, compiling:(linked_list_lab/t_core.clj:62)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6462)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.access$100(Compiler.java:37)
	at clojure.lang.Compiler$LetExpr$Parser.parse(Compiler.java:5883)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6455)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$BodyExpr$Parser.parse(Compiler.java:5618)
	at clojure.lang.Compiler$FnMethod.parse(Compiler.java:5054)
	at clojure.lang.Compiler$FnExpr.parse(Compiler.java:3674)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6453)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3548)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6457)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3548)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6457)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$BodyExpr$Parser.parse(Compiler.java:5618)
	at clojure.lang.Compiler$FnMethod.parse(Compiler.java:5054)
	at clojure.lang.Compiler$FnExpr.parse(Compiler.java:3674)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6453)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.access$100(Compiler.java:37)
	at clojure.lang.Compiler$LetFnExpr$Parser.parse(Compiler.java:5746)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6455)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3548)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6457)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3548)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6457)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$BodyExpr$Parser.parse(Compiler.java:5618)
	at clojure.lang.Compiler$FnMethod.parse(Compiler.java:5054)
	at clojure.lang.Compiler$FnExpr.parse(Compiler.java:3674)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6453)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.eval(Compiler.java:6508)
	at clojure.lang.Compiler.load(Compiler.java:6952)
	at clojure.lang.RT.loadResourceScript(RT.java:359)
	at clojure.lang.RT.loadResourceScript(RT.java:350)
	at clojure.lang.RT.load(RT.java:429)
	at clojure.lang.RT.load(RT.java:400)
	at clojure.core$load$fn__4890.invoke(core.clj:5415)
	at clojure.core$load.doInvoke(core.clj:5414)
	at clojure.lang.RestFn.invoke(RestFn.java:408)
	at clojure.core$load_one.invoke(core.clj:5227)
	at clojure.core$load_lib.doInvoke(core.clj:5264)
	at clojure.lang.RestFn.applyTo(RestFn.java:142)
	at clojure.core$apply.invoke(core.clj:603)
	at clojure.core$load_libs.doInvoke(core.clj:5298)
	at clojure.lang.RestFn.applyTo(RestFn.java:137)
	at clojure.core$apply.invoke(core.clj:603)
	at clojure.core$require.doInvoke(core.clj:5381)
	at clojure.lang.RestFn.invoke(RestFn.java:421)
	at midje.repl$load_facts$fn__5724.invoke(repl.clj:206)
	at midje.repl$load_facts.doInvoke(repl.clj:192)
	at clojure.lang.RestFn.invoke(RestFn.java:397)
	at user$eval5786.invoke(form-init6413516866199272193.clj:1)
	at clojure.lang.Compiler.eval(Compiler.java:6511)
	at clojure.lang.Compiler.eval(Compiler.java:6501)
	at clojure.lang.Compiler.load(Compiler.java:6952)
	at clojure.lang.Compiler.loadFile(Compiler.java:6912)
	at clojure.main$load_script.invoke(main.clj:283)
	at clojure.main$init_opt.invoke(main.clj:288)
	at clojure.main$initialize.invoke(main.clj:316)
	at clojure.main$null_opt.invoke(main.clj:349)
	at clojure.main$main.doInvoke(main.clj:427)
	at clojure.lang.RestFn.invoke(RestFn.java:421)
	at clojure.lang.Var.invoke(Var.java:419)
	at clojure.lang.AFn.applyToHelper(AFn.java:163)
	at clojure.lang.Var.applyTo(Var.java:532)
	at clojure.main.main(main.java:37)
Caused by: java.lang.RuntimeException: Expecting var, but List is mapped to class linked_list_lab.core.List
	at clojure.lang.Util.runtimeException(Util.java:170)
	at clojure.lang.Compiler.lookupVar(Compiler.java:6839)
	at clojure.lang.Compiler.isMacro(Compiler.java:6306)
	at clojure.lang.Compiler.macroexpand1(Compiler.java:6361)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6441)
	... 91 more
Subprocess failed


** Details for Delete all decrements count in all cases.

Exception in thread "main" java.lang.RuntimeException: Expecting var, but List is mapped to class linked_list_lab.core.List, compiling:(linked_list_lab/t_core.clj:62)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6462)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.access$100(Compiler.java:37)
	at clojure.lang.Compiler$LetExpr$Parser.parse(Compiler.java:5883)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6455)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$BodyExpr$Parser.parse(Compiler.java:5618)
	at clojure.lang.Compiler$FnMethod.parse(Compiler.java:5054)
	at clojure.lang.Compiler$FnExpr.parse(Compiler.java:3674)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6453)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3548)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6457)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3548)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6457)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$BodyExpr$Parser.parse(Compiler.java:5618)
	at clojure.lang.Compiler$FnMethod.parse(Compiler.java:5054)
	at clojure.lang.Compiler$FnExpr.parse(Compiler.java:3674)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6453)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.access$100(Compiler.java:37)
	at clojure.lang.Compiler$LetFnExpr$Parser.parse(Compiler.java:5746)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6455)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6443)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3548)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6457)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3548)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6457)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.analyze(Compiler.java:6223)
	at clojure.lang.Compiler$BodyExpr$Parser.parse(Compiler.java:5618)
	at clojure.lang.Compiler$FnMethod.parse(Compiler.java:5054)
	at clojure.lang.Compiler$FnExpr.parse(Compiler.java:3674)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6453)
	at clojure.lang.Compiler.analyze(Compiler.java:6262)
	at clojure.lang.Compiler.eval(Compiler.java:6508)
	at clojure.lang.Compiler.load(Compiler.java:6952)
	at clojure.lang.RT.loadResourceScript(RT.java:359)
	at clojure.lang.RT.loadResourceScript(RT.java:350)
	at clojure.lang.RT.load(RT.java:429)
	at clojure.lang.RT.load(RT.java:400)
	at clojure.core$load$fn__4890.invoke(core.clj:5415)
	at clojure.core$load.doInvoke(core.clj:5414)
	at clojure.lang.RestFn.invoke(RestFn.java:408)
	at clojure.core$load_one.invoke(core.clj:5227)
	at clojure.core$load_lib.doInvoke(core.clj:5264)
	at clojure.lang.RestFn.applyTo(RestFn.java:142)
	at clojure.core$apply.invoke(core.clj:603)
	at clojure.core$load_libs.doInvoke(core.clj:5298)
	at clojure.lang.RestFn.applyTo(RestFn.java:137)
	at clojure.core$apply.invoke(core.clj:603)
	at clojure.core$require.doInvoke(core.clj:5381)
	at clojure.lang.RestFn.invoke(RestFn.java:421)
	at midje.repl$load_facts$fn__5724.invoke(repl.clj:206)
	at midje.repl$load_facts.doInvoke(repl.clj:192)
	at clojure.lang.RestFn.invoke(RestFn.java:397)
	at user$eval5786.invoke(form-init851536611208332115.clj:1)
	at clojure.lang.Compiler.eval(Compiler.java:6511)
	at clojure.lang.Compiler.eval(Compiler.java:6501)
	at clojure.lang.Compiler.load(Compiler.java:6952)
	at clojure.lang.Compiler.loadFile(Compiler.java:6912)
	at clojure.main$load_script.invoke(main.clj:283)
	at clojure.main$init_opt.invoke(main.clj:288)
	at clojure.main$initialize.invoke(main.clj:316)
	at clojure.main$null_opt.invoke(main.clj:349)
	at clojure.main$main.doInvoke(main.clj:427)
	at clojure.lang.RestFn.invoke(RestFn.java:421)
	at clojure.lang.Var.invoke(Var.java:419)
	at clojure.lang.AFn.applyToHelper(AFn.java:163)
	at clojure.lang.Var.applyTo(Var.java:532)
	at clojure.main.main(main.java:37)
Caused by: java.lang.RuntimeException: Expecting var, but List is mapped to class linked_list_lab.core.List
	at clojure.lang.Util.runtimeException(Util.java:170)
	at clojure.lang.Compiler.lookupVar(Compiler.java:6839)
	at clojure.lang.Compiler.isMacro(Compiler.java:6306)
	at clojure.lang.Compiler.macroexpand1(Compiler.java:6361)
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6441)
	... 91 more
Subprocess failed
